_0c2‍.x([["sendOTP",()=>sendOTP]]);/**
 * Generates random number string OTP of 6 digits
 * @author Biswaranjan Padhy
 *
 * @param {Object} length - the length of number to generate
 *
 * @returns {string} the number string
 */
const _generateOTP = () => {
  return JSON.stringify(Math.floor(100000 + Math.random() * 900000));
};

/**
 * Generates OTP and sends a text message to user
 * @author Biswaranjan Padhy
 *
 * @param {Object} user - the user object
 * @param {Object} options - extra options for OTP time binding
 *
 * @returns {string} the number string
 */
       const sendOTP = async (user, options = {}) => {
  try {
    // Generate OTP
    const OTP = _generateOTP();
    let messageBody = `Your VacFinder login OTP is ${OTP}. Do not share it with anyone.`;

    if (options.source === "SIGNIN_OTP") {
      // Expire OTP in 10 mins
      redis.setex(user._id.toString(), 600, OTP);
      messageBody = messageBody + " OTP is valid for 10 mins.";
    } else if (options.source === "RESET_PASSWORD_OTP") {
      // For reset password OTP should only expire when used.
      redis.set(user._id.toString(), OTP);
    } else {
      return { isSuccess: false };
    }

    await twilio.messages.create({
      body: messageBody,
      messagingServiceSid: process.env.TWILIO_MESSAGE_SERVICE_SID,
      to: user.phone,
    });

    return { isSuccess: true, error: null };
  } catch (error) {
    return { isSuccess: false, error };
  }
};
