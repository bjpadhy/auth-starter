let errorHandler,rpcUserSignup,rpcUserSignin,rpcUserRequestOTP,rpcUserResetPassword;_95f‍.x([["signup",()=>signup],["signin",()=>signin],["requestOTP",()=>requestOTP],["resetPassword",()=>resetPassword]]);_95f‍.w("../../v1/lib/customError",[["errorHandler",["errorHandler"],function(v){errorHandler=v}]]);_95f‍.w("../rpc/user",[["rpcUserSignup",["rpcUserSignup"],function(v){rpcUserSignup=v}],["rpcUserSignin",["rpcUserSignin"],function(v){rpcUserSignin=v}],["rpcUserRequestOTP",["rpcUserRequestOTP"],function(v){rpcUserRequestOTP=v}],["rpcUserResetPassword",["rpcUserResetPassword"],function(v){rpcUserResetPassword=v}]]);


       const signup = async (req, res) => {
  try {
    const result = await rpcUserSignup(req.body);

    if (result.error) {
      const { error } = result;
      res.status(error.statusCode).json({ isSuccess: false, error });
      return;
    }

    res.status(200).json({ isSuccess: true });
    return;
  } catch (error) {
    _95f‍.g.console.log(error);
    res.status(500).json(error);
    return;
  }
};

       const signin = async (req, res) => {
  try {
    const result = await rpcUserSignin(req.body);

    if (result.error) {
      const { error } = result;
      res.status(error.statusCode).json({ isSuccess: false, error });
      return;
    }

    res.status(200).json(result);
    return;
  } catch (error) {
    _95f‍.g.console.log(error);
    res.status(500).json(error);
    return;
  }
};

       const requestOTP = async (req, res) => {
  try {
    const result = await rpcUserRequestOTP(req.body);
    if (result.error) {
      res.status(result.error.errorCode).json(result);
      return;
    }

    res.status(200).json(result);
    return;
  } catch (error) {
    res.status(500).json(error);
    return;
  }
};

       const resetPassword = async (req, res) => {
  try {
    const result = await rpcUserResetPassword(req.body);
    if (result.error) {
      res.status(result.error.errorCode).json(result);
      return;
    }

    res.status(200).json(result);
    return;
  } catch (error) {
    res.status(500).json(error);
    return;
  }
};

module.exports = router;
